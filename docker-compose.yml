version: '3.6'
volumes:
  exec_data:
services:
  # database for nisq-analyzer, qc-atlas and pattern-atlas
  # each container has it's own database, generated by the db image
  db:
    build:
      context: ./db
    image: quantil-db
    environment:
      # specifies user:pw for each container
      POSTGRES_USERS: 'planqk:planqk|nisq:nisq|patternatlas:patternatlas|qprov:qprov'
      # specifies db name for each container
      POSTGRES_DATABASES: 'planqk:planqk|nisq:nisq|patternatlas:patternatlas|qprov:qprov'
      ATLAS_DB: planqk
      NISQ_DB: nisq
      PATTERNATLAS_DB: patternatlas
      QPROV_DB: qprov
    #volumes:
      # use this volume to save the postgres data
      # - ./postgres-data:/var/lib/postgresql/data
    ports:
      - '5060:5060'
    networks:
      - default
  qc-atlas-ui:
    image: planqk/qc-atlas-ui:v3.2.0
    depends_on:
      - config-server
    environment:
      # because the requests are performed from the browser and not
      # from the container itself we have to specify localhost here
      # and **not** the container name
      QC_ATLAS_HOST_NAME: localhost
      QC_ATLAS_PORT: 6626
      PATTERN_ATLAS_HOST_NAME: localhost
      PATTERN_ATLAS_PORT: 1977
      PATTERN_ATLAS_UI_HOST_NAME: localhost
      PATTERN_ATLAS_UI_PORT: 1978
      NISQ_ANALYZER_HOST_NAME: localhost
      NISQ_ANALYZER_PORT: 5010
      QPROV_HOST_NAME: localhost
      QPROV_PORT: 5020
      LATEX_RENDERER_HOST_NAME: localhost
      LATEX_RENDERER_PORT: 5030
    ports:
      - '80:80'
    volumes:
      - ./config:/opt/init-config.d
    networks:
      - default
  qc-atlas:
    image: planqk/atlas:v3.1.1
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5060
      POSTGRES_USER: planqk
      POSTGRES_PASSWORD: planqk
      POSTGRES_DB: planqk
    ports:
      - "6626:6626"
    networks:
      - default
  pattern-atlas-api:
    image: patternatlas/pattern-atlas-api:v1.6.1
    profiles: ["all", "patternAtlas"]
    environment:
      JDBC_DATABASE_URL: db
      JDBC_DATABASE_NAME: patternatlas
      JDBC_DATABASE_USERNAME: patternatlas
      JDBC_DATABASE_PASSWORD: patternatlas
      JDBC_DATABASE_PORT: 5060
      LATEX_RENDERER_HOST_NAME: latex-renderer
      LATEX_RENDERER_PORT: 5030
      API_PORT: 1977
    ports:
      - '1977:1977'
    networks:
      - default
  pattern-atlas-ui:
    image: patternatlas/pattern-atlas-ui:v1.4.0
    profiles: [ "all", "patternAtlas" ]
    depends_on:
      - config-server
    environment:
      # because the requests are performed from the browser and not
      # from the container itself we have to specify localhost here
      # and **not** the container name
      PATTERN_ATLAS_API_HOST_NAME: localhost
      PATTERN_ATLAS_API_PORT: 1977
      LATEX_RENDERER_HOST_NAME: localhost
      LATEX_RENDERER_PORT: 5030
    ports:
      - "1978:80"
  nisq-analyzer:
    image: planqk/nisq-analyzer:v1.4.0
    profiles: ["all", "nisqAnalyzer", "nisqAnalyzerCompilerComparison"]
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5060
      POSTGRES_USER: nisq
      POSTGRES_PASSWORD: nisq
      POSTGRES_DB: nisq

      # activate correct application properties
      SPRING_PROFILES_ACTIVE: docker

      # Configure QPROV connection
      QPROV_HOSTNAME: qprov
      QPROV_PORT: 5020
      TRANSLATOR_HOSTNAME: quantum-transpiler
      TRANSLATOR_PORT: 5012

      # Configuration of the SDK Connector Services
      QISKIT_HOSTNAME: qiskit-service
      QISKIT_PORT: 5013
      FOREST_HOSTNAME: forest-service
      FOREST_PORT: 5014
      PYTKET_HOSTNAME: pytket-service
      PYTKET_PORT: 5015
    ports:
      - '5010:5010'
    networks:
      - default
  # used by qc-atlas-ui to render latex
  latex-renderer:
    image: planqk/latex-renderer:v1.2.0
    ports:
      - "5030:5030"

  quantum-transpiler:
    image: planqk/quantum-transpiler-backend:v1.0.2
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    ports:
     - '5012:5012'
    networks:
     - default

  quantum-transpiler-frontend:
    image: planqk/quantum-transpiler-frontend:v1.0.2
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    ports:
     - '5011:80'
    networks:
     - default

  # used by nisq analyzer for execution and transpilation
  qiskit-service:
    image: planqk/qiskit-service:v1.4.0
    profiles: ["all", "nisqAnalyzer", "nisqAnalyzerCompilerComparison", "qprov"]
    command: sh /app/startup.sh
    ports:
      - "5013:5013"
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    networks:
      - default

  qiskit-rq-worker:
    image: planqk/qiskit-service:v1.4.0
    profiles: ["all", "nisqAnalyzer", "nisqAnalyzerCompilerComparison", "qprov"]
    command: rq worker --url redis://redis:5040 qiskit-service_execute
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    depends_on:
      - redis
    deploy:
      replicas: 1

  forest-service:
    image: planqk/forest-service:v1.2.0
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    command: sh /app/startup.sh
    ports:
      - "5014:5014"
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5016
      - QUILC_HOSTNAME=rigetti-quilc
      - QUILC_PORT=5017
    volumes:
      - exec_data:/data
    networks:
      - default

  forest-rq-worker:
    image: planqk/forest-service:v1.2.0
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    command: rq worker --url redis://redis:5040 forest-service_execute
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5016
      - QUILC_HOSTNAME=rigetti-quilc
      - QUILC_PORT=5017
    volumes:
      - exec_data:/data
    depends_on:
      - redis
    networks:
      - default

  pytket-service:
    image: planqk/pytket-service:v1.2.0
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    command: sh /app/startup.sh
    ports:
      - "5015:5015"
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5016
    volumes:
      - exec_data:/data
    networks:
      - default

  pytket-rq-worker:
    image: planqk/pytket-service:v1.2.0
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    command: rq worker --url redis://redis:5040 pytket-service_execute
    environment:
      - REDIS_URL=redis://redis:5040
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5016
    volumes:
      - exec_data:/data
    depends_on:
      - redis
    networks:
      - default

  rigetti-qvm:
    image: rigetti/qvm
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    ports:
      - "5016:5016"
    command: -S -p 5016
    networks:
      - default

  rigetti-quilc:
    image: rigetti/quilc
    profiles: ["all", "nisqAnalyzerCompilerComparison"]
    ports:
      - "5017:5017"
    command: -S -p 5017
    networks:
      - default
  # redis server for qiskit service
  redis:
    image: redis:6.2.2
    profiles: ["all", "nisqAnalyzer", "nisqAnalyzerCompilerComparison", "qprov"]
    ports:
      - "5040:5040"
    command: --port 5040
    networks:
      - default
  qprov:
    image: planqk/qprov:v1.2.0
    profiles: ["all", "nisqAnalyzer", "nisqAnalyzerCompilerComparison", "qprov"]
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5060
      POSTGRES_USER: qprov
      POSTGRES_PASSWORD: qprov
      POSTGRES_DB: qprov
    ports:
      - "5020:5020"
    networks:
      - default
  qprov-collector-ibm:
    image: planqk/qprov-collector:v1.2.0
    profiles: ["all", "nisqAnalyzer", "nisqAnalyzerCompilerComparison", "qprov"]
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5060
      POSTGRES_USER: qprov
      POSTGRES_PASSWORD: qprov
      POSTGRES_DB: qprov
      QPROV_IBMQ_TOKEN: ''
      QPROV_IBMQ_EXECUTE_CIRCUITS: 'false'
      QPROV_IBMQ_AUTO_COLLECT: 'true'
      QPROV_IBMQ_AUTO_COLLECT_INTERVAL: 60
      QPROV_IBMQ_AUTO_COLLECT_INTERVAL_CIRCUITS: 180
      QISKIT_SERVICE_HOSTNAME: qiskit-service
      QISKIT_SERVICE_PORT: 5013
    ports:
      - "5021:5021"
    networks:
      - default
  config-server:
    image: quay.io/coreos/etcd:latest
    environment:
      ETCD_NAME: config-node1
      ETCD_CORS: "*"
      ETCD_ADVERTISE_CLIENT_URLS: "http://config-server:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCDCTL_API: 3
    ports:
      - "2379:2379"
    networks:
      - default
networks:
  default:
    driver: bridge
