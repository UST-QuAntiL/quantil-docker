version: '3.6'
volumes:
  exec_data:
services:
  # database for nisq-analyzer, qc-atlas and pattern-atlas
  # each container has it's own database, generated by the db image
  db:
    build:
      context: ./db
    image: quantil-db
    environment:
      # specifies user:pw for each container
      POSTGRES_USERS: 'planqk:planqk|nisq:nisq|patternpedia:patternpedia'
      # specifies db name for each container
      POSTGRES_DATABASES: 'planqk:planqk|nisq:nisq|patternpedia:patternpedia'
      ATLAS_DB: planqk
      NISQ_DB: nisq
      PATTERNPEDIA_DB: patternpedia
    #volumes:
      # use this volume to save the postgres data
      # - ./postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - default
  qc-atlas-ui:
    image: planqk/qc-atlas-ui:latest
    environment:
      # because the requests are performed from the browser and not
      # from the container itself we have to specify localhost here
      # and **not** the container name
      QC_ATLAS_HOST_NAME: localhost
      QC_ATLAS_PORT: 8080
      PATTERN_ATLAS_HOST_NAME: localhost
      PATTERN_ATLAS_PORT: 8082
      NISQ_ANALYZER_HOST_NAME: localhost
      NISQ_ANALYZER_PORT: 8081
    ports:
      - '80:80'
    networks:
      - default
  qc-atlas:
    image: planqk/atlas:develop
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: planqk
      POSTGRES_PASSWORD: planqk
      POSTGRES_DB: planqk
    ports:
      - "8080:8080"
    networks:
      - default
  pattern-atlas-api:
    image: patternpedia/patternrepo-api:latest
    environment:
      JDBC_DATABASE_URL: db
      JDBC_DATABASE_NAME: patternpedia
      JDBC_DATABASE_USERNAME: patternpedia
      JDBC_DATABASE_PASSWORD: patternpedia
      JDBC_DATABASE_PORT: 5432
      API_PORT: 8080
    ports:
      - '8082:8080'
    networks:
      - default
  nisq-analyzer:
    image: planqk/nisq-analyzer:latest
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: nisq
      POSTGRES_PASSWORD: nisq
      POSTGRES_DB: nisq
      NISQ_HOSTNAME: qiskit-service
      NISQ_PORT: 5000
      NISQ_VERSION: v1.0
    ports:
      - '8081:8080'
    networks:
      - default
  # used by qc-atlas-ui to render latex
  latex-renderer:
    image: beiselmn/latex-renderer:0.1
    ports:
      - "8083:8082"
  # used by nisq analyzer for execution and transpilation
  qiskit-service:
    image: planqk/qiskit-service:latest
    command: sh /app/startup.sh
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    networks:
      - default
  qiskit-rq-worker:
    image: planqk/qiskit-service:latest
    command: rq worker --url redis://redis qiskit-service_execute
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    depends_on:
      - redis
    deploy:
      replicas: 4
  # redis server for qiskit service
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - default
networks:
  default:
    driver: bridge
